{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a4587eff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "File loaded successfully!\n",
      "Available columns in the dataset:\n",
      "Index(['index', 'budget', 'genres', 'homepage', 'id', 'keywords',\n",
      "       'original_language', 'original_title', 'overview', 'popularity',\n",
      "       'production_companies', 'production_countries', 'release_date',\n",
      "       'revenue', 'runtime', 'spoken_languages', 'status', 'tagline', 'title',\n",
      "       'vote_average', 'vote_count', 'cast', 'crew', 'director'],\n",
      "      dtype='object')\n",
      "   index     budget                                    genres  \\\n",
      "0      0  237000000  Action Adventure Fantasy Science Fiction   \n",
      "1      1  300000000                  Adventure Fantasy Action   \n",
      "2      2  245000000                    Action Adventure Crime   \n",
      "3      3  250000000               Action Crime Drama Thriller   \n",
      "4      4  260000000          Action Adventure Science Fiction   \n",
      "\n",
      "                                       homepage      id  \\\n",
      "0                   http://www.avatarmovie.com/   19995   \n",
      "1  http://disney.go.com/disneypictures/pirates/     285   \n",
      "2   http://www.sonypictures.com/movies/spectre/  206647   \n",
      "3            http://www.thedarkknightrises.com/   49026   \n",
      "4          http://movies.disney.com/john-carter   49529   \n",
      "\n",
      "                                            keywords original_language  \\\n",
      "0  culture clash future space war space colony so...                en   \n",
      "1  ocean drug abuse exotic island east india trad...                en   \n",
      "2         spy based on novel secret agent sequel mi6                en   \n",
      "3  dc comics crime fighter terrorist secret ident...                en   \n",
      "4  based on novel mars medallion space travel pri...                en   \n",
      "\n",
      "                             original_title  \\\n",
      "0                                    Avatar   \n",
      "1  Pirates of the Caribbean: At World's End   \n",
      "2                                   Spectre   \n",
      "3                     The Dark Knight Rises   \n",
      "4                               John Carter   \n",
      "\n",
      "                                            overview  popularity  ... runtime  \\\n",
      "0  In the 22nd century, a paraplegic Marine is di...  150.437577  ...   162.0   \n",
      "1  Captain Barbossa, long believed to be dead, ha...  139.082615  ...   169.0   \n",
      "2  A cryptic message from Bond‚Äôs past sends him o...  107.376788  ...   148.0   \n",
      "3  Following the death of District Attorney Harve...  112.312950  ...   165.0   \n",
      "4  John Carter is a war-weary, former military ca...   43.926995  ...   132.0   \n",
      "\n",
      "                                    spoken_languages    status  \\\n",
      "0  [{\"iso_639_1\": \"en\", \"name\": \"English\"}, {\"iso...  Released   \n",
      "1           [{\"iso_639_1\": \"en\", \"name\": \"English\"}]  Released   \n",
      "2  [{\"iso_639_1\": \"fr\", \"name\": \"Fran\\u00e7ais\"},...  Released   \n",
      "3           [{\"iso_639_1\": \"en\", \"name\": \"English\"}]  Released   \n",
      "4           [{\"iso_639_1\": \"en\", \"name\": \"English\"}]  Released   \n",
      "\n",
      "                                          tagline  \\\n",
      "0                     Enter the World of Pandora.   \n",
      "1  At the end of the world, the adventure begins.   \n",
      "2                           A Plan No One Escapes   \n",
      "3                                 The Legend Ends   \n",
      "4            Lost in our world, found in another.   \n",
      "\n",
      "                                      title vote_average vote_count  \\\n",
      "0                                    Avatar          7.2      11800   \n",
      "1  Pirates of the Caribbean: At World's End          6.9       4500   \n",
      "2                                   Spectre          6.3       4466   \n",
      "3                     The Dark Knight Rises          7.6       9106   \n",
      "4                               John Carter          6.1       2124   \n",
      "\n",
      "                                                cast  \\\n",
      "0  Sam Worthington Zoe Saldana Sigourney Weaver S...   \n",
      "1  Johnny Depp Orlando Bloom Keira Knightley Stel...   \n",
      "2  Daniel Craig Christoph Waltz L\\u00e9a Seydoux ...   \n",
      "3  Christian Bale Michael Caine Gary Oldman Anne ...   \n",
      "4  Taylor Kitsch Lynn Collins Samantha Morton Wil...   \n",
      "\n",
      "                                                crew           director  \n",
      "0  [{'name': 'Stephen E. Rivkin', 'gender': 0, 'd...      James Cameron  \n",
      "1  [{'name': 'Dariusz Wolski', 'gender': 2, 'depa...     Gore Verbinski  \n",
      "2  [{'name': 'Thomas Newman', 'gender': 2, 'depar...         Sam Mendes  \n",
      "3  [{'name': 'Hans Zimmer', 'gender': 2, 'departm...  Christopher Nolan  \n",
      "4  [{'name': 'Andrew Stanton', 'gender': 2, 'depa...     Andrew Stanton  \n",
      "\n",
      "[5 rows x 24 columns]\n",
      "Model Accuracy: 0.08740894901144641\n",
      "‚úÖ Model, Vectorizer, and Label Binarizer saved!\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.multioutput import MultiOutputClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.preprocessing import MultiLabelBinarizer\n",
    "import joblib\n",
    "\n",
    "# üîΩ Step 1: Load the dataset\n",
    "def load_data():\n",
    "    file_path = r\"C:\\Users\\JASEMINE\\Desktop\\movie_genre_classification\\data\\movies.csv\"\n",
    "    try:\n",
    "        df = pd.read_csv(file_path)\n",
    "        print(\"File loaded successfully!\")\n",
    "    except FileNotFoundError:\n",
    "        print(f\"Error: The file at {file_path} was not found. Please check the file path.\")\n",
    "        return None, None, None\n",
    "\n",
    "    # Check for the column names and print the first few rows\n",
    "    print(\"Available columns in the dataset:\")\n",
    "    print(df.columns)\n",
    "    print(df.head())\n",
    "\n",
    "    try:\n",
    "        # Handle missing values in 'overview' by replacing NaN with empty strings\n",
    "        descriptions = df[['overview']].fillna('')\n",
    "\n",
    "        # Handle missing values in 'genres' and process them\n",
    "        genres = df['genres'].fillna('')\n",
    "        genres = genres.str.split(' ').apply(lambda x: [i for i in x if i])  # Remove empty genres\n",
    "\n",
    "        # Binarize the genre labels\n",
    "        mlb = MultiLabelBinarizer()\n",
    "        genres = mlb.fit_transform(genres)\n",
    "\n",
    "        return descriptions, genres, mlb\n",
    "    except KeyError:\n",
    "        print(\"Error: The necessary columns 'overview' or 'genres' are not found. Please verify the column names.\")\n",
    "        return None, None, None\n",
    "\n",
    "# üîÅ Step 2: Train the model using Logistic Regression with MultiOutputClassifier\n",
    "def train_model(X, y):\n",
    "    vectorizer = TfidfVectorizer(stop_words='english')\n",
    "    X_tfidf = vectorizer.fit_transform(X['overview'])\n",
    "\n",
    "    model = MultiOutputClassifier(LogisticRegression(max_iter=1000))\n",
    "    model.fit(X_tfidf, y)\n",
    "\n",
    "    return model, vectorizer\n",
    "\n",
    "# üîç Step 3: Evaluate the model's performance\n",
    "def evaluate_model(model, vectorizer, X, y):\n",
    "    X_tfidf = vectorizer.transform(X['overview'])\n",
    "    y_pred = model.predict(X_tfidf)\n",
    "    accuracy = accuracy_score(y, y_pred)\n",
    "    return accuracy\n",
    "\n",
    "# ‚úÖ Step 4: Main execution\n",
    "if __name__ == \"__main__\":\n",
    "    X, y, mlb = load_data()\n",
    "\n",
    "    if X is not None and y is not None and mlb is not None:\n",
    "        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "        model, vectorizer = train_model(X_train, y_train)\n",
    "\n",
    "        accuracy = evaluate_model(model, vectorizer, X_test, y_test)\n",
    "        print(\"Model Accuracy:\", accuracy)\n",
    "\n",
    "        # Save everything\n",
    "        joblib.dump(model, \"genre_classifier.pkl\")\n",
    "        joblib.dump(vectorizer, \"vectorizer.pkl\")\n",
    "        joblib.dump(mlb, \"mlb.pkl\")  # ‚úÖ Saving MultiLabelBinarizer\n",
    "        print(\"‚úÖ Model, Vectorizer, and Label Binarizer saved!\")\n",
    "    else:\n",
    "        print(\"Failed to load data, check the column names.\")\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
